-- KamadoExxeHub - Ro-Ghoul Script 100% funcional

-- Notificação inicial pcall(function() game.StarterGui:SetCore("SendNotification", { Title = "KamadoExxeHub", Text = "Script Ro-Ghoul ativado com sucesso!", Duration = 5 }) end)

-- Serviços necessários local Players = game:GetService("Players") local RunService = game:GetService("RunService") local VirtualInputManager = game:GetService("VirtualInputManager")

-- Player local player = Players.LocalPlayer local character = player.Character or player.CharacterAdded:Wait() local humanoid = character:WaitForChild("Humanoid")

-- Configurações local AUTO_FARM = true local AUTO_SKILL = true

-- Função para detectar inimigos próximos local function getNearestEnemy() local closest = nil local shortestDistance = math.huge

for _, npc in ipairs(workspace:GetDescendants()) do
    if npc:IsA("Model") and npc:FindFirstChild("Humanoid") and npc:FindFirstChild("Head") and npc ~= character then
        local distance = (npc.Head.Position - character.HumanoidRootPart.Position).Magnitude
        if distance < 100 and npc.Humanoid.Health > 0 then
            if distance < shortestDistance then
                shortestDistance = distance
                closest = npc
            end
        end
    end
end

return closest

end

-- Função de ataque local function attack() VirtualInputManager:SendKeyEvent(true, "E", false, game) wait(0.1) VirtualInputManager:SendKeyEvent(false, "E", false, game) end

-- Função de auto skill local function useSkills() for _, key in ipairs({"R", "F"}) do VirtualInputManager:SendKeyEvent(true, key, false, game) wait(0.1) VirtualInputManager:SendKeyEvent(false, key, false, game) end end

-- Loop principal RunService.RenderStepped:Connect(function() if AUTO_FARM then local enemy = getNearestEnemy() if enemy and enemy:FindFirstChild("HumanoidRootPart") then character:MoveTo(enemy.HumanoidRootPart.Position + Vector3.new(2, 0, 0)) attack() if AUTO_SKILL then useSkills() end end end end)

-- Interface print("KamadoExxeHub carregado com sucesso para Ro-Ghoul")

